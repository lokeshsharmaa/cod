// Code generated by goa v3.11.3, DO NOT EDIT.
//
// externalservice HTTP server types
//
// Command:
// $ goa gen assignment_crossnokaye/cod/externalservice/design

package server

import (
	externalservice "assignment_crossnokaye/cod/externalservice/gen/externalservice"

	goa "goa.design/goa/v3/pkg"
)

// CreateCharacterRequestBody is the type of the "externalservice" service
// "create_character" endpoint HTTP request body.
type CreateCharacterRequestBody struct {
	// Character name
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	// Character description
	Description *string `form:"description,omitempty" json:"description,omitempty" xml:"description,omitempty"`
	// Character health
	Health *int `form:"health,omitempty" json:"health,omitempty" xml:"health,omitempty"`
	// Character experience
	Experience *int `form:"experience,omitempty" json:"experience,omitempty" xml:"experience,omitempty"`
}

// UpdateCharacterRequestBody is the type of the "externalservice" service
// "update_character" endpoint HTTP request body.
type UpdateCharacterRequestBody struct {
	// Character name
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	// Character description
	Description *string `form:"description,omitempty" json:"description,omitempty" xml:"description,omitempty"`
	// Character health
	Health *int `form:"health,omitempty" json:"health,omitempty" xml:"health,omitempty"`
	// Character experience
	Experience *int `form:"experience,omitempty" json:"experience,omitempty" xml:"experience,omitempty"`
}

// AddItemToInventoryRequestBody is the type of the "externalservice" service
// "add_item_to_inventory" endpoint HTTP request body.
type AddItemToInventoryRequestBody struct {
	// Item ID
	ItemID *int `form:"item_id,omitempty" json:"item_id,omitempty" xml:"item_id,omitempty"`
}

// CreateItemRequestBody is the type of the "externalservice" service
// "create_item" endpoint HTTP request body.
type CreateItemRequestBody struct {
	// Item name
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	// Item description
	Description *string `form:"description,omitempty" json:"description,omitempty" xml:"description,omitempty"`
	// Item damage
	Damage *int `form:"damage,omitempty" json:"damage,omitempty" xml:"damage,omitempty"`
	// Item healing
	Healing *int `form:"healing,omitempty" json:"healing,omitempty" xml:"healing,omitempty"`
	// Item protection
	Protection *int `form:"protection,omitempty" json:"protection,omitempty" xml:"protection,omitempty"`
}

// UpdateItemRequestBody is the type of the "externalservice" service
// "update_item" endpoint HTTP request body.
type UpdateItemRequestBody struct {
	// Item name
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	// Item description
	Description *string `form:"description,omitempty" json:"description,omitempty" xml:"description,omitempty"`
	// Item damage
	Damage *int `form:"damage,omitempty" json:"damage,omitempty" xml:"damage,omitempty"`
	// Item healing
	Healing *int `form:"healing,omitempty" json:"healing,omitempty" xml:"healing,omitempty"`
	// Item protection
	Protection *int `form:"protection,omitempty" json:"protection,omitempty" xml:"protection,omitempty"`
}

// CreateCharacterResponseBody is the type of the "externalservice" service
// "create_character" endpoint HTTP response body.
type CreateCharacterResponseBody struct {
	// Character ID
	ID *int `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	// Character name
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	// Character description
	Description *string `form:"description,omitempty" json:"description,omitempty" xml:"description,omitempty"`
	// Character health
	Health *int `form:"health,omitempty" json:"health,omitempty" xml:"health,omitempty"`
	// Character experience
	Experience *int `form:"experience,omitempty" json:"experience,omitempty" xml:"experience,omitempty"`
}

// GetCharacterResponseBody is the type of the "externalservice" service
// "get_character" endpoint HTTP response body.
type GetCharacterResponseBody struct {
	// Character ID
	ID *int `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	// Character name
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	// Character description
	Description *string `form:"description,omitempty" json:"description,omitempty" xml:"description,omitempty"`
	// Character health
	Health *int `form:"health,omitempty" json:"health,omitempty" xml:"health,omitempty"`
	// Character experience
	Experience *int `form:"experience,omitempty" json:"experience,omitempty" xml:"experience,omitempty"`
}

// GetInventoryResponseBody is the type of the "externalservice" service
// "get_inventory" endpoint HTTP response body.
type GetInventoryResponseBody struct {
	// Character ID
	CharacterID *int `form:"character_id,omitempty" json:"character_id,omitempty" xml:"character_id,omitempty"`
	// Item IDs
	Items []int `form:"items,omitempty" json:"items,omitempty" xml:"items,omitempty"`
}

// CreateItemResponseBody is the type of the "externalservice" service
// "create_item" endpoint HTTP response body.
type CreateItemResponseBody struct {
	// Item ID
	ID *int `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	// Item name
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	// Item description
	Description *string `form:"description,omitempty" json:"description,omitempty" xml:"description,omitempty"`
	// Item damage
	Damage *int `form:"damage,omitempty" json:"damage,omitempty" xml:"damage,omitempty"`
	// Item healing
	Healing *int `form:"healing,omitempty" json:"healing,omitempty" xml:"healing,omitempty"`
	// Item protection
	Protection *int `form:"protection,omitempty" json:"protection,omitempty" xml:"protection,omitempty"`
}

// GetItemResponseBody is the type of the "externalservice" service "get_item"
// endpoint HTTP response body.
type GetItemResponseBody struct {
	// Item ID
	ID *int `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	// Item name
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	// Item description
	Description *string `form:"description,omitempty" json:"description,omitempty" xml:"description,omitempty"`
	// Item damage
	Damage *int `form:"damage,omitempty" json:"damage,omitempty" xml:"damage,omitempty"`
	// Item healing
	Healing *int `form:"healing,omitempty" json:"healing,omitempty" xml:"healing,omitempty"`
	// Item protection
	Protection *int `form:"protection,omitempty" json:"protection,omitempty" xml:"protection,omitempty"`
}

// NewCreateCharacterResponseBody builds the HTTP response body from the result
// of the "create_character" endpoint of the "externalservice" service.
func NewCreateCharacterResponseBody(res *externalservice.Character) *CreateCharacterResponseBody {
	body := &CreateCharacterResponseBody{
		ID:          res.ID,
		Name:        res.Name,
		Description: res.Description,
		Health:      res.Health,
		Experience:  res.Experience,
	}
	return body
}

// NewGetCharacterResponseBody builds the HTTP response body from the result of
// the "get_character" endpoint of the "externalservice" service.
func NewGetCharacterResponseBody(res *externalservice.Character) *GetCharacterResponseBody {
	body := &GetCharacterResponseBody{
		ID:          res.ID,
		Name:        res.Name,
		Description: res.Description,
		Health:      res.Health,
		Experience:  res.Experience,
	}
	return body
}

// NewGetInventoryResponseBody builds the HTTP response body from the result of
// the "get_inventory" endpoint of the "externalservice" service.
func NewGetInventoryResponseBody(res *externalservice.Inventory) *GetInventoryResponseBody {
	body := &GetInventoryResponseBody{
		CharacterID: res.CharacterID,
	}
	if res.Items != nil {
		body.Items = make([]int, len(res.Items))
		for i, val := range res.Items {
			body.Items[i] = val
		}
	}
	return body
}

// NewCreateItemResponseBody builds the HTTP response body from the result of
// the "create_item" endpoint of the "externalservice" service.
func NewCreateItemResponseBody(res *externalservice.Item) *CreateItemResponseBody {
	body := &CreateItemResponseBody{
		ID:          res.ID,
		Name:        res.Name,
		Description: res.Description,
		Damage:      res.Damage,
		Healing:     res.Healing,
		Protection:  res.Protection,
	}
	return body
}

// NewGetItemResponseBody builds the HTTP response body from the result of the
// "get_item" endpoint of the "externalservice" service.
func NewGetItemResponseBody(res *externalservice.Item) *GetItemResponseBody {
	body := &GetItemResponseBody{
		ID:          res.ID,
		Name:        res.Name,
		Description: res.Description,
		Damage:      res.Damage,
		Healing:     res.Healing,
		Protection:  res.Protection,
	}
	return body
}

// NewCreateCharacterPayload builds a externalservice service create_character
// endpoint payload.
func NewCreateCharacterPayload(body *CreateCharacterRequestBody) *externalservice.CreateCharacterPayload {
	v := &externalservice.CreateCharacterPayload{
		Name:        *body.Name,
		Description: body.Description,
		Health:      *body.Health,
		Experience:  *body.Experience,
	}

	return v
}

// NewGetCharacterPayload builds a externalservice service get_character
// endpoint payload.
func NewGetCharacterPayload(id int) *externalservice.GetCharacterPayload {
	v := &externalservice.GetCharacterPayload{}
	v.ID = id

	return v
}

// NewUpdateCharacterPayload builds a externalservice service update_character
// endpoint payload.
func NewUpdateCharacterPayload(body *UpdateCharacterRequestBody, id int) *externalservice.UpdateCharacterPayload {
	v := &externalservice.UpdateCharacterPayload{
		Name:        body.Name,
		Description: body.Description,
		Health:      body.Health,
		Experience:  body.Experience,
	}
	v.ID = id

	return v
}

// NewDeleteCharacterPayload builds a externalservice service delete_character
// endpoint payload.
func NewDeleteCharacterPayload(id int) *externalservice.DeleteCharacterPayload {
	v := &externalservice.DeleteCharacterPayload{}
	v.ID = id

	return v
}

// NewGetInventoryPayload builds a externalservice service get_inventory
// endpoint payload.
func NewGetInventoryPayload(characterID int) *externalservice.GetInventoryPayload {
	v := &externalservice.GetInventoryPayload{}
	v.CharacterID = characterID

	return v
}

// NewAddItemToInventoryPayload builds a externalservice service
// add_item_to_inventory endpoint payload.
func NewAddItemToInventoryPayload(body *AddItemToInventoryRequestBody, characterID int) *externalservice.AddItemToInventoryPayload {
	v := &externalservice.AddItemToInventoryPayload{
		ItemID: *body.ItemID,
	}
	v.CharacterID = characterID

	return v
}

// NewRemoveItemFromInventoryPayload builds a externalservice service
// remove_item_from_inventory endpoint payload.
func NewRemoveItemFromInventoryPayload(characterID int, itemID int) *externalservice.RemoveItemFromInventoryPayload {
	v := &externalservice.RemoveItemFromInventoryPayload{}
	v.CharacterID = characterID
	v.ItemID = itemID

	return v
}

// NewCreateItemPayload builds a externalservice service create_item endpoint
// payload.
func NewCreateItemPayload(body *CreateItemRequestBody) *externalservice.CreateItemPayload {
	v := &externalservice.CreateItemPayload{
		Name:        *body.Name,
		Description: body.Description,
		Damage:      *body.Damage,
		Healing:     body.Healing,
		Protection:  body.Protection,
	}

	return v
}

// NewGetItemPayload builds a externalservice service get_item endpoint payload.
func NewGetItemPayload(id int) *externalservice.GetItemPayload {
	v := &externalservice.GetItemPayload{}
	v.ID = id

	return v
}

// NewUpdateItemPayload builds a externalservice service update_item endpoint
// payload.
func NewUpdateItemPayload(body *UpdateItemRequestBody, id int) *externalservice.UpdateItemPayload {
	v := &externalservice.UpdateItemPayload{
		Name:        body.Name,
		Description: body.Description,
		Damage:      body.Damage,
		Healing:     body.Healing,
		Protection:  body.Protection,
	}
	v.ID = id

	return v
}

// NewDeleteItemPayload builds a externalservice service delete_item endpoint
// payload.
func NewDeleteItemPayload(id int) *externalservice.DeleteItemPayload {
	v := &externalservice.DeleteItemPayload{}
	v.ID = id

	return v
}

// ValidateCreateCharacterRequestBody runs the validations defined on
// create_character_request_body
func ValidateCreateCharacterRequestBody(body *CreateCharacterRequestBody) (err error) {
	if body.Name == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("name", "body"))
	}
	if body.Health == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("health", "body"))
	}
	if body.Experience == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("experience", "body"))
	}
	return
}

// ValidateAddItemToInventoryRequestBody runs the validations defined on
// add_item_to_inventory_request_body
func ValidateAddItemToInventoryRequestBody(body *AddItemToInventoryRequestBody) (err error) {
	if body.ItemID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("item_id", "body"))
	}
	return
}

// ValidateCreateItemRequestBody runs the validations defined on
// create_item_request_body
func ValidateCreateItemRequestBody(body *CreateItemRequestBody) (err error) {
	if body.Name == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("name", "body"))
	}
	if body.Damage == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("damage", "body"))
	}
	return
}
