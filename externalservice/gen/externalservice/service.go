// Code generated by goa v3.11.3, DO NOT EDIT.
//
// externalservice service
//
// Command:
// $ goa gen assignment_crossnokaye/cod/externalservice/design

package externalservice

import (
	"context"
)

// Contains API CRUD operations on characters, inventories, and items.
type Service interface {
	// Creating a new Character
	CreateCharacter(context.Context, *CreateCharacterPayload) (res *Character, err error)
	// Fetching a Character
	GetCharacter(context.Context, *GetCharacterPayload) (res *Character, err error)
	// Updating a Character
	UpdateCharacter(context.Context, *UpdateCharacterPayload) (err error)
	// Deleting a Character
	DeleteCharacter(context.Context, *DeleteCharacterPayload) (err error)
	// Fetching a Character's Inventory
	GetInventory(context.Context, *GetInventoryPayload) (res *Inventory, err error)
	// Adding an Item to Character's Inventory
	AddItemToInventory(context.Context, *AddItemToInventoryPayload) (err error)
	// Removing an Item from Character's Inventory
	RemoveItemFromInventory(context.Context, *RemoveItemFromInventoryPayload) (err error)
	// Creating a new Item
	CreateItem(context.Context, *CreateItemPayload) (res *Item, err error)
	// Fetching a Item
	GetItem(context.Context, *GetItemPayload) (res *Item, err error)
	// Updating a Item
	UpdateItem(context.Context, *UpdateItemPayload) (err error)
	// Deleting a Item
	DeleteItem(context.Context, *DeleteItemPayload) (err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "externalservice"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [11]string{"create_character", "get_character", "update_character", "delete_character", "get_inventory", "add_item_to_inventory", "remove_item_from_inventory", "create_item", "get_item", "update_item", "delete_item"}

// AddItemToInventoryPayload is the payload type of the externalservice service
// add_item_to_inventory method.
type AddItemToInventoryPayload struct {
	// Character ID
	CharacterID int
	// Item ID
	ItemID int
}

// Character is the result type of the externalservice service create_character
// method.
type Character struct {
	// Character ID
	ID *int
	// Character name
	Name *string
	// Character description
	Description *string
	// Character health
	Health *int
	// Character experience
	Experience *int
}

// CreateCharacterPayload is the payload type of the externalservice service
// create_character method.
type CreateCharacterPayload struct {
	// Character name
	Name string
	// Character description
	Description *string
	// Character health
	Health int
	// Character experience
	Experience int
}

// CreateItemPayload is the payload type of the externalservice service
// create_item method.
type CreateItemPayload struct {
	// Item name
	Name string
	// Item description
	Description *string
	// Item damage
	Damage int
	// Item healing
	Healing *int
	// Item protection
	Protection *int
}

// DeleteCharacterPayload is the payload type of the externalservice service
// delete_character method.
type DeleteCharacterPayload struct {
	// Character ID
	ID int
}

// DeleteItemPayload is the payload type of the externalservice service
// delete_item method.
type DeleteItemPayload struct {
	// Item ID
	ID int
}

// GetCharacterPayload is the payload type of the externalservice service
// get_character method.
type GetCharacterPayload struct {
	// Character ID
	ID int
}

// GetInventoryPayload is the payload type of the externalservice service
// get_inventory method.
type GetInventoryPayload struct {
	// Character ID
	CharacterID int
}

// GetItemPayload is the payload type of the externalservice service get_item
// method.
type GetItemPayload struct {
	// Item ID
	ID int
}

// Inventory is the result type of the externalservice service get_inventory
// method.
type Inventory struct {
	// Character ID
	CharacterID *int
	// Item IDs
	Items []int
}

// Item is the result type of the externalservice service create_item method.
type Item struct {
	// Item ID
	ID *int
	// Item name
	Name *string
	// Item description
	Description *string
	// Item damage
	Damage *int
	// Item healing
	Healing *int
	// Item protection
	Protection *int
}

// RemoveItemFromInventoryPayload is the payload type of the externalservice
// service remove_item_from_inventory method.
type RemoveItemFromInventoryPayload struct {
	// Character ID
	CharacterID int
	// Item ID
	ItemID int
}

// UpdateCharacterPayload is the payload type of the externalservice service
// update_character method.
type UpdateCharacterPayload struct {
	// Character ID
	ID int
	// Character name
	Name *string
	// Character description
	Description *string
	// Character health
	Health *int
	// Character experience
	Experience *int
}

// UpdateItemPayload is the payload type of the externalservice service
// update_item method.
type UpdateItemPayload struct {
	// Item ID
	ID int
	// Item name
	Name *string
	// Item description
	Description *string
	// Item damage
	Damage *int
	// Item healing
	Healing *int
	// Item protection
	Protection *int
}

// Bad request
type BadRequest string

// Character not found
type NotFound string

// Item not valid
type NotValidItem string

// Name not unique
type UniqueConstraint string

// Error returns an error description.
func (e BadRequest) Error() string {
	return "Bad request"
}

// ErrorName returns "bad_request".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e BadRequest) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "bad_request".
func (e BadRequest) GoaErrorName() string {
	return "bad_request"
}

// Error returns an error description.
func (e NotFound) Error() string {
	return "Character not found"
}

// ErrorName returns "not_found".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e NotFound) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "not_found".
func (e NotFound) GoaErrorName() string {
	return "not_found"
}

// Error returns an error description.
func (e NotValidItem) Error() string {
	return "Item not valid"
}

// ErrorName returns "not_valid_item".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e NotValidItem) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "not_valid_item".
func (e NotValidItem) GoaErrorName() string {
	return "not_valid_item"
}

// Error returns an error description.
func (e UniqueConstraint) Error() string {
	return "Name not unique"
}

// ErrorName returns "unique_constraint".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e UniqueConstraint) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "unique_constraint".
func (e UniqueConstraint) GoaErrorName() string {
	return "unique_constraint"
}
