// Code generated by goa v3.11.3, DO NOT EDIT.
//
// ItemService gRPC server types
//
// Command:
// $ goa gen assignment_crossnokaye/cod/itemservice/design

package server

import (
	item_servicepb "assignment_crossnokaye/cod/itemservice/gen/grpc/item_service/pb"
	itemservice "assignment_crossnokaye/cod/itemservice/gen/item_service"
)

// NewCreatePayload builds the payload of the "Create" endpoint of the
// "ItemService" service from the gRPC request type.
func NewCreatePayload(message *item_servicepb.CreateRequest) *itemservice.CreatePayload {
	v := &itemservice.CreatePayload{
		Name:        message.Name,
		Description: message.Description,
		Damage:      int(message.Damage),
	}
	if message.Healing != nil {
		healing := int(*message.Healing)
		v.Healing = &healing
	}
	if message.Protection != nil {
		protection := int(*message.Protection)
		v.Protection = &protection
	}
	return v
}

// NewProtoCreateResponse builds the gRPC response type from the result of the
// "Create" endpoint of the "ItemService" service.
func NewProtoCreateResponse(result int) *item_servicepb.CreateResponse {
	message := &item_servicepb.CreateResponse{}
	message.Field = int32(result)
	return message
}

// NewGetPayload builds the payload of the "Get" endpoint of the "ItemService"
// service from the gRPC request type.
func NewGetPayload(message *item_servicepb.GetRequest) *itemservice.GetPayload {
	v := &itemservice.GetPayload{
		ID: int(message.Id),
	}
	return v
}

// NewProtoGetResponse builds the gRPC response type from the result of the
// "Get" endpoint of the "ItemService" service.
func NewProtoGetResponse(result *itemservice.Item) *item_servicepb.GetResponse {
	message := &item_servicepb.GetResponse{
		Name:        result.Name,
		Description: result.Description,
	}
	if result.ID != nil {
		id := int32(*result.ID)
		message.Id = &id
	}
	if result.Damage != nil {
		damage := int32(*result.Damage)
		message.Damage = &damage
	}
	if result.Healing != nil {
		healing := int32(*result.Healing)
		message.Healing = &healing
	}
	if result.Protection != nil {
		protection := int32(*result.Protection)
		message.Protection = &protection
	}
	return message
}

// NewUpdatePayload builds the payload of the "Update" endpoint of the
// "ItemService" service from the gRPC request type.
func NewUpdatePayload(message *item_servicepb.UpdateRequest) *itemservice.UpdatePayload {
	v := &itemservice.UpdatePayload{
		ID:          int(message.Id),
		Name:        message.Name,
		Description: message.Description,
	}
	if message.Damage != nil {
		damage := int(*message.Damage)
		v.Damage = &damage
	}
	if message.Healing != nil {
		healing := int(*message.Healing)
		v.Healing = &healing
	}
	if message.Protection != nil {
		protection := int(*message.Protection)
		v.Protection = &protection
	}
	return v
}

// NewProtoUpdateResponse builds the gRPC response type from the result of the
// "Update" endpoint of the "ItemService" service.
func NewProtoUpdateResponse() *item_servicepb.UpdateResponse {
	message := &item_servicepb.UpdateResponse{}
	return message
}

// NewDeletePayload builds the payload of the "Delete" endpoint of the
// "ItemService" service from the gRPC request type.
func NewDeletePayload(message *item_servicepb.DeleteRequest) *itemservice.DeletePayload {
	v := &itemservice.DeletePayload{
		ID: int(message.Id),
	}
	return v
}

// NewProtoDeleteResponse builds the gRPC response type from the result of the
// "Delete" endpoint of the "ItemService" service.
func NewProtoDeleteResponse() *item_servicepb.DeleteResponse {
	message := &item_servicepb.DeleteResponse{}
	return message
}
