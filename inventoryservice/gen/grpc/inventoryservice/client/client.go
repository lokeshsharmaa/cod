// Code generated by goa v3.11.3, DO NOT EDIT.
//
// inventoryservice gRPC client
//
// Command:
// $ goa gen assignment_crossnokaye/cod/inventoryservice/design

package client

import (
	inventoryservicepb "assignment_crossnokaye/cod/inventoryservice/gen/grpc/inventoryservice/pb"
	"context"

	goagrpc "goa.design/goa/v3/grpc"
	goa "goa.design/goa/v3/pkg"
	"google.golang.org/grpc"
)

// Client lists the service endpoint gRPC clients.
type Client struct {
	grpccli inventoryservicepb.InventoryserviceClient
	opts    []grpc.CallOption
}

// NewClient instantiates gRPC client for all the inventoryservice service
// servers.
func NewClient(cc *grpc.ClientConn, opts ...grpc.CallOption) *Client {
	return &Client{
		grpccli: inventoryservicepb.NewInventoryserviceClient(cc),
		opts:    opts,
	}
}

// Get calls the "Get" function in inventoryservicepb.InventoryserviceClient
// interface.
func (c *Client) Get() goa.Endpoint {
	return func(ctx context.Context, v any) (any, error) {
		inv := goagrpc.NewInvoker(
			BuildGetFunc(c.grpccli, c.opts...),
			EncodeGetRequest,
			DecodeGetResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			return nil, goa.Fault(err.Error())
		}
		return res, nil
	}
}

// Add calls the "Add" function in inventoryservicepb.InventoryserviceClient
// interface.
func (c *Client) Add() goa.Endpoint {
	return func(ctx context.Context, v any) (any, error) {
		inv := goagrpc.NewInvoker(
			BuildAddFunc(c.grpccli, c.opts...),
			EncodeAddRequest,
			nil)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			return nil, goa.Fault(err.Error())
		}
		return res, nil
	}
}

// Delete calls the "Delete" function in
// inventoryservicepb.InventoryserviceClient interface.
func (c *Client) Delete() goa.Endpoint {
	return func(ctx context.Context, v any) (any, error) {
		inv := goagrpc.NewInvoker(
			BuildDeleteFunc(c.grpccli, c.opts...),
			EncodeDeleteRequest,
			nil)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			return nil, goa.Fault(err.Error())
		}
		return res, nil
	}
}
